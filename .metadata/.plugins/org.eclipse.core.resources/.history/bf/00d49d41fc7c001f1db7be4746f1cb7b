package com.example.project.Service;

import java.util.Optional;

import org.springframework.stereotype.Service;

import com.example.project.DTO.RegisterDTO;
import com.example.project.Models.User;
import com.example.project.Repository.UserRepository;

@Service
public class UserService {

	private final UserRepository userRepository;
	
	public UserService(UserRepository userRepository) {
		this.userRepository = userRepository;
	}
	
	public User findUserById(Long id) throws Exception{
		Optional<User> optUser = this.userRepository.findById(id);
		if(!optUser.isPresent()) {
			throw new Exception("User cannot found!");
		}
		return optUser.get();
	}
	
	public User saveUser(User user) {
		return this.userRepository.save(user);
	}
	
	public User registerUser(RegisterDTO reqUser) throws Exception{
		
		User createUser = new User();
		createUser.setEmail(reqUser.getEmail());
		if(!reqUser.getConfirmPassword().equals(reqUser.getPassword()))
			throw Exception("Password confirm is incorrect!");
		createUser.setPassword(reqUser.getPassword());
		createUser.setFirstName(reqUser.getFirstName());
		createUser.setLastName(reqUser.getLastName());
		
		
		return null;
	}
	
}
